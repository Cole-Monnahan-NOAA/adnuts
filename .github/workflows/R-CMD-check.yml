# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions

# Taken from r4ss as example. 2021-01-27 -Cole
on: [pull_request]

name: R-CMD-check

jobs:

  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-18.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
         # - {os: ubuntu-20.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Get admb and put in path (Windows)
        if: runner.os == 'Windows'
        run: |
          Invoke-WebRequest -Uri https://github.com/admb-project/admb/releases/download/admb-12.2/admb-12.2-windows.zip -OutFile "D:\a\adnuts\admb-12.2.zip"
          Expand-Archive -LiteralPath "D:\a\adnuts\admb-12.2.zip" -DestinationPath "D:\a\adnuts\admb\"
          echo "D:\a\adnuts\admb\admb-12.2\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
#dummy
      - name: Get admb and put in path (MacOS)
        if: runner.os == 'MacOS'
        run: |
          curl https://github.com/admb-project/admb/releases/download/admb-12.2/admb-12.2-macos-xcode12.zip -L -o admb-12.2.zip
          unzip admb-12.2.zip -d /usr/local/bin
          rm admb-12.2.zip
          ls /usr/local/bin
          echo "/usr/local/bin/admb-12.2/bin" >> $GITHUB_PATH
#dummy
      - name: Get admb and put in path (Linux)
        if: runner.os == 'Linux'
        run: |
          wget https://github.com/admb-project/admb/releases/download/admb-12.2/admb-12.2-linux.zip
          sudo unzip admb-12.2-linux.zip -d /usr/local/bin
          sudo chmod 755 /usr/local/bin/admb-12.2/bin/admb
          rm admb-12.2-linux.zip
          echo "/usr/local/bin/admb-12.2/bin" >> $GITHUB_PATH
# dummy
    # - name: Compile model and run
    #   run: |
    #     cd tests/simple
    #     admb simple.tpl
    #  shell: bash

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "18.04"))')
        shell: bash
#dummy
      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
