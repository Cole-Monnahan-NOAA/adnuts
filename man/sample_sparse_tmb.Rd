% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sparse.R
\name{sample_sparse_tmb}
\alias{sample_sparse_tmb}
\title{NUTS sampling for TMB models using a sparse inverse mass matrix (beta)}
\usage{
sample_sparse_tmb(
  obj,
  iter = 2000,
  warmup = floor(iter/2),
  chains = 4,
  cores = chains,
  thin = 1,
  control = NULL,
  seed = NULL,
  laplace = FALSE,
  init = c("last.par.best", "random", "random-t", "unif"),
  metric = c("auto", "unit", "diag", "dense", "sparse", "sparse-J", "RTMBtape"),
  skip_optimization = FALSE,
  Q = NULL,
  Qinv = NULL,
  globals = NULL,
  model_name = NULL,
  refresh = NULL,
  rotation_only = FALSE,
  ...
)
}
\arguments{
\item{obj}{The TMB object with random effects turned on and
optimized}

\item{iter}{Total iterations to run (warmup + sampling)}

\item{warmup}{Total warmup iterations. Defaults to
\code{iter}/2 based on Stan defaults, but when using dense,
sparse, or diag metrics a much shorter warmup can be used
(e.g., 150), especially if paired with a 'unit_e' Stan
metric. Use \code{\link{plot_sampler_params}} to investigate
warmup performance and adjust as necessary for subsequent
runs.}

\item{chains}{Number of chains}

\item{cores}{Number of parallel cores to use, defaults to
\code{chains} so set this to 1 to execute serial chains.}

\item{thin}{The thinning rate (defaults to 1).}

\item{control}{NUTS control list, currently available options
are 'adapt_delta', 'max_treedepth', and 'metric' which is
the type of metric adaptation for Stan to do with options
('unit_e', 'diag_e', or 'dense_e'). For dense and sparse
metrics this usually can be 'unit_e' to skip adaptation.
NULL values (default) revert to \code{stan_sample} defaults.}

\item{seed}{Random number seed, used for generating inital
values (if 'random") and for NUTS.}

\item{laplace}{Whether to leave the Laplace approximation on
and only use NUTS to sample the fixed effects, or turn it
off and sample from the joint parameter space (default).}

\item{init}{Either 'last.par.best' (default), 'random',
'random-t', or 'unif'. The former starts from the joint
mode, while 'random' and 'random-t' draw from multivariate
normal or multivariate t with 2 degrees of freedom
distributions using the inverse joint precision matrix as a
covariance matrix. 'random-t' is provided to allow for more
dispersed initial values. 'unif' will draw U(-2,2) samples
for all parameters, similar ot Stan's default behavior. If
the joint NLL is undefined at the initial values then the
model will exit and return the initial vector for further
investigation by the user, if desired. Note that
\code{\link{StanEstimators::stan_sample}} only allows for
the same init vector for all chains currently. If a seed is
specified it will be set and thus the inits used will be
reproducible. The inits are also returned in the 'inits'
slot of the fitted object.}

\item{metric}{A character specifying which metric to use.
Defaults to "auto" which uses an algorithm to select the
best metric (see details), otherwise one of "sparse",
"dense", "diag", "unit", "sparse-J", or "RTMBtape" can be
specified.}

\item{skip_optimization}{Whether to skip optimization or not
(default).}

\item{Q}{The sparse precision matrix. It is calculated internally if not specified (default).}

\item{Qinv}{The dense matrix (M). It is calculated internally if not specified (default).}

\item{globals}{A named list of objects to pass to new R
sessions when running in parallel and using RTMB. Typically
this is the `data` object for now.}

\item{model_name}{An optional character giving the model name.
If NULL it will use the DLL name which for RTMB models is
just 'RTMB'. The name is used only for printing.}

\item{refresh}{How often to print updates to console
(integer). 0 will turn off printing. The default is 100.}

\item{...}{Additional arguments to pass to
\code{\link{StanEstimators::stan_sample}}.}
}
\value{
A fitted MCMC object of class 'adfit'
}
\description{
NUTS sampling for TMB models using a sparse inverse mass matrix (beta)
}
\details{
The TMB metric is used to decorrelate/descale the
  posterior before sampling using the Stan algorithms via the
  StanEstimator interface. The default is 'auto' which uses an
  algorithm to determine the optimal metric to use for a
  particular model. The algorithm depends on whether Q and/or
  M=Qinv are available, the extent of parameter correlations,
  and the speed of gradient calculations. The chosen metric
  and reasoning are printed to the console before NUTS
  sampling. A sparse and dense matrix will decorrelate and
  descale the posterior in the same way, but the sparse one
  will be more efficient with high levels of sparsity and
  larger dimensions. The 'diag' option is to take the marginal
  SDs from M and thus only descales, while the 'unit' option
  is the default Stan algorithm and should be used with mass
  matrix adaptation. Note that the \code{metric} is the TMB
  metric and distinct from the Stan metric which is controlled
  via the \code{control} list.
}
